{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"potion_",
				"potion_mix"
			],
			[
				"next_",
				"next_actor"
			],
			[
				"revert",
				"revert_delay"
			],
			[
				"select",
				"select_sprite"
			],
			[
				"next",
				"next_exp"
			],
			[
				"atmo",
				"atmosphere_gain"
			],
			[
				"ap",
				"appdata"
			],
			[
				"need",
				"need_reload"
			],
			[
				"new_tar",
				"new_target_y"
			],
			[
				"super",
				"super_skipping"
			],
			[
				"setup",
				"setup_grid"
			],
			[
				"selec",
				"select_sprite"
			],
			[
				"content",
				"content_sprite"
			],
			[
				"attr",
				"attr_reader"
			],
			[
				"character",
				"character_name"
			],
			[
				"extra",
				"extra_dmg"
			],
			[
				"sub",
				"subtitle"
			],
			[
				"vis",
				"visible_map"
			],
			[
				"sele",
				"selected_box"
			],
			[
				"skip",
				"skip_wait_test"
			],
			[
				"enemy",
				"enemy_types"
			],
			[
				"att",
				"attr_reader"
			],
			[
				"display",
				"display_x"
			],
			[
				"choi",
				"choices"
			],
			[
				"show",
				"showpattern"
			],
			[
				"di",
				"display_y"
			],
			[
				"Weather",
				"Weather_DarkDots"
			],
			[
				"at",
				"atmosphere"
			],
			[
				"per",
				"per_page"
			],
			[
				"Mnu_",
				"Mnu_Base"
			],
			[
				"anim",
				"anim_seq"
			],
			[
				"sound",
				"sound_delay"
			],
			[
				"pos",
				"positions"
			],
			[
				"env",
				"environmental"
			],
			[
				"log_",
				"log_info"
			],
			[
				"arg",
				"argstring"
			],
			[
				"charact",
				"character_name"
			],
			[
				"total",
				"total_frames"
			],
			[
				"att_r",
				"attr_reader"
			],
			[
				"fixed",
				"fixed_width"
			],
			[
				"fix",
				"fix_width"
			],
			[
				"po",
				"poppers"
			],
			[
				"vp",
				"vp_pops"
			],
			[
				"active",
				"active_battler"
			],
			[
				"par",
				"parent"
			],
			[
				"draw_",
				"debug_draw_fps"
			],
			[
				"camera",
				"camera_to"
			],
			[
				"ev",
				"event_at"
			],
			[
				"chara",
				"character_name"
			],
			[
				"log",
				"log_info"
			],
			[
				"Sprite",
				"SpriteGroup"
			],
			[
				"point",
				"point_at"
			],
			[
				"filter",
				"filter_by"
			],
			[
				"tra",
				"transition"
			],
			[
				"push",
				"push_scene"
			],
			[
				"Ui",
				"Ui_Message"
			],
			[
				"PAD",
				"PADDING_Y"
			],
			[
				"PADD",
				"PADDING_X"
			],
			[
				"disp",
				"display_x"
			],
			[
				"tileset",
				"tileset_id"
			],
			[
				"idx",
				"idx_sprite"
			],
			[
				"refres",
				"refresh_osd"
			],
			[
				"conso",
				"console_text"
			],
			[
				"cons",
				"console"
			],
			[
				"VK",
				"VK_TAB"
			],
			[
				"console",
				"console_sprite"
			],
			[
				"window",
				"window_bmp"
			],
			[
				"Game_a",
				"Game_Actor"
			],
			[
				"frame",
				"frame_count"
			],
			[
				"del",
				"delete"
			],
			[
				"disa",
				"disabled"
			],
			[
				"get",
				"getloc"
			],
			[
				"common_ev",
				"common_event_id"
			],
			[
				"refre",
				"refresh_table"
			],
			[
				"string",
				"string_similarity"
			],
			[
				"icon",
				"icon_data"
			],
			[
				"refresh",
				"refresh_console"
			],
			[
				"INFO",
				"INFO_COLOR"
			],
			[
				"quick",
				"quick_start"
			],
			[
				"instanc",
				"instance_variable_set"
			],
			[
				"instance",
				"instance_variablesã€”functionã€•"
			],
			[
				"text",
				"textStatus"
			],
			[
				"json",
				"json_data"
			],
			[
				"export",
				"export_json"
			],
			[
				"sort",
				"sort_col"
			],
			[
				"pad",
				"padding_bottom"
			],
			[
				"wait",
				"wait_for_message"
			],
			[
				"Widget_label",
				"Widget_SuperLabel"
			],
			[
				"circ",
				"circ_in_out"
			],
			[
				"quad_in",
				"quad_in_out"
			],
			[
				"Super",
				"Sprite_Superbox"
			],
			[
				"Widt",
				"Widget_Clicker"
			],
			[
				"lett",
				"letterlayer"
			],
			[
				"Widg",
				"Widget_Image"
			],
			[
				"linear",
				"linear_tween"
			],
			[
				"Par",
				"ParallelNano"
			],
			[
				"start",
				"start_instants"
			],
			[
				"dis",
				"disable_next_music"
			],
			[
				"For",
				"ForktongueCaverns"
			],
			[
				"spawn",
				"spawn_puzzle"
			],
			[
				"keyl",
				"keylock"
			],
			[
				"max",
				"max_width"
			],
			[
				"opp",
				"get_opposite_region"
			],
			[
				"targ",
				"target_loc"
			],
			[
				"room",
				"room_dir_to_rpg_dir"
			],
			[
				"from",
				"from_region"
			],
			[
				"fill",
				"fill_edge"
			],
			[
				"XF",
				"XFER_DOWN"
			],
			[
				"bot",
				"bottom_row"
			],
			[
				"net",
				"next_in_direction"
			],
			[
				"key",
				"key_level"
			],
			[
				"MAX",
				"MAX_SPACES"
			],
			[
				"find",
				"find_boss"
			],
			[
				"norm",
				"normalize_intensity"
			],
			[
				"INTE",
				"INTENSITY_GROWTH_JITTER"
			],
			[
				"INT",
				"INTENSITY_GROWTH_JITTER"
			],
			[
				"set",
				"set_item"
			],
			[
				"swit",
				"switch_room"
			],
			[
				"STA",
				"STATE_EITHER"
			],
			[
				"base",
				"base_room"
			],
			[
				"given",
				"given_state"
			],
			[
				"any",
				"any_locks"
			],
			[
				"remove",
				"remove_descendants_from_list"
			],
			[
				"bos",
				"boss_key"
			],
			[
				"boss",
				"boss_room"
			],
			[
				"new",
				"new_key_level"
			],
			[
				"pare",
				"parent"
			],
			[
				"paren",
				"parent_room"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Aveyond4/Editor/edit.html",
			"settings":
			{
				"buffer_size": 5975,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/State/party.rb",
			"settings":
			{
				"buffer_size": 7040,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 136 files for \"transfer_cave_in\"\n\nC:\\Aveyond4\\Scripts\\Functions\\transfers.rb:\n   65  end\n   66  \n   67: def transfer_cave_in(dir=nil)\n   68  	transfer_in(dir)\n   69  	$player.trans_type = :cave\n\n1 match in 1 file\n\n\nSearching 136 files for \"shake_1\"\n\nC:\\Aveyond4\\Scripts\\Functions\\effects.rb:\n   16  \n   17  \n   18: def shake_1\n   19  \n   20  	amount = 20\n\n1 match in 1 file\n\n\nSearching 136 files for \"flash\"\n\nC:\\Aveyond4\\Scripts\\Elements\\Map\\character.rb:\n  117      #end\n  118  \n  119:     # Flash effect\n  120:     if @character.flash_dur != nil\n  121:       self.flash(Color.new(255,255,255,160),@character.flash_dur)\n  122:       @character.flash_dur = nil\n  123      end\n  124  \n\nC:\\Aveyond4\\Scripts\\Elements\\Widgets\\box.rb:\n   42  	# end\n   43  \n   44: 	def flash_light\n   45: 		@wallpaper.flash(Color.new(255,255,255,40),20)\n   46  	end\n   47  \n   48: 	def flash_heavy\n   49: 		@wallpaper.flash(Color.new(255,255,255,100),20)\n   50  	end\n   51  \n\nC:\\Aveyond4\\Scripts\\Elements\\Widgets\\list.rb:\n  439        end\n  440  \n  441:       @select_sprite.flash(Color.new(255,255,255,40),20)\n  442    		\n  443        #if @data.count > @max_per_page\n  ...\n  476        end\n  477  \n  478:       @select_sprite.flash(Color.new(255,255,255,40),20)\n  479  \n  480    		if can_scroll? && @scroll_idx > 0 && @page_idx <= 1\n\nC:\\Aveyond4\\Scripts\\Functions\\effects.rb:\n   11  end\n   12  \n   13: def flash(ev,dur=20)\n   14: 	gev(ev).flash_dur = dur\n   15  end\n   16  \n\nC:\\Aveyond4\\Scripts\\Interface\\Battle\\Parts\\charview.rb:\n  126  		@revert = true\n  127  		@revert_delay = 75\n  128: 		@port.flash(Color.new(240,230,50,150),20)\n  129  	end\n  130  \n  ...\n  134  		@revert = true\n  135  		@revert_delay = 75\n  136: 		@port.flash(Color.new(240,0,0,150),20)\n  137  	end\n  138  \n  ...\n  155  		#$tweens.clear(self)\n  156  		@port.do(go(\"oy\",6,100,:qio))\n  157: 		@box.flash_light\n  158  	end\n  159  \n\nC:\\Aveyond4\\Scripts\\Interface\\Battle\\Parts\\targetcmd.rb:\n   43  	def point_at(char)\n   44  		@arrow.center(char.ev.screen_x,char.ev.screen_y-$cache.get(char.ev.character_name).height-12)\n   45: 		@active.ev.flash_dur = 15\n   46  	end\n   47  \n\nC:\\Aveyond4\\Scripts\\Interface\\Map\\Parts\\grid.rb:\n  616  \n  617  		glowon = @selected_box\n  618: 		@selected_box.flash_light\n  619  \n  620  		@glow.bitmap = Bitmap.new(glowon.width-12,glowon.height-12)\n\nC:\\Aveyond4\\Scripts\\Interface\\Menu\\char.rb:\n  108  \n  109  		$menu.char_cursor = option\n  110: 		@grid.selected_box.flash_heavy\n  111  		self.close_soon\n  112  \n\nC:\\Aveyond4\\Scripts\\Interface\\Menu\\main.rb:\n  303  		glowon = @selected_box\n  304  \n  305: 		@selected_box.flash_light\n  306  \n  307  		@glow.bitmap = Bitmap.new(glowon.width-12,glowon.height-12)\n  ...\n  343  		end\n  344  \n  345: 		@selected_box.flash_heavy\n  346  		$menu.menu_cursor = option\n  347  \n\nC:\\Aveyond4\\Scripts\\Interface\\Menu\\Parts\\char_box_large.rb:\n  138  		#$tweens.clear(self)\n  139  		@port.do(go(\"oy\",6,100,:qio))\n  140: 		@box.flash_light\n  141  	end\n  142  \n\nC:\\Aveyond4\\Scripts\\Interface\\Menu\\Parts\\char_box_small.rb:\n   74  		#$tweens.clear(self)\n   75  		@port.do(go(\"oy\",3,100,:qio))\n   76: 		@box.flash_light\n   77  	end\n   78  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n   46    attr_accessor :off_x, :off_y\n   47  \n   48:   attr_accessor :flash_dur\n   49    \n   50     \n   ..\n  115      @opacity = 255\n  116  \n  117:     @flash_dur = nil\n  118  \n  119    end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n  212          else\n  213  \n  214:           # Flash target event\n  215:           flash(@event_at_path)\n  216  \n  217            dx = @x - @event_at_path.x\n\nC:\\Aveyond4\\Scripts\\Scenes\\battle_3_main.rb:\n   43      @attack_results = $battle.build_attack_results(@active_battler,@attack_round.skill)\n   44  \n   45:     @active_battler.ev.flash_dur = 15\n   46  \n   47      # Show text if there is\n\n28 matches across 14 files\n\n\nSearching 136 files for \"below\"\n\nC:\\Aveyond4\\Scripts\\Elements\\Map\\spark.rb:\n   36  			self.opacity = anim.opacity\n   37  			case anim.order\n   38: 				when 'below'\n   39  					self.z = 0\n   40  				when 'same'\n\nC:\\Aveyond4\\Scripts\\Elements\\Widgets\\list.rb:\n  205    def draw(data,row)\n  206  \n  207:     #return if data == nil # For above or below accessible\n  208  \n  209      # Drw the contents\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  305    def screen_z(height = 0)\n  306  \n  307:     return 0 if @below\n  308      return 999 if @above\n  309  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\event.rb:\n   16  \n   17    attr_reader :above\n   18:   attr_reader :below\n   19  \n   20    attr_reader :page_idx\n   ..\n   47      @through = true\n   48      @above = false\n   49:     @below = false\n   50  \n   51      @width = 1\n   ..\n  465          when '#above'\n  466            @above = true\n  467:         when '#below'\n  468:           @below = true\n  469  \n  470          when '#opacity'\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  394      events.values.each{ |e| \n  395        if e != self_event and e.at?(x,y)\n  396:          return false if !(e.through || e.above || e.below)\n  397        end\n  398      }\n\n8 matches across 5 files\n\n\nSearching 136 files for \"screen_z\"\n\nC:\\Aveyond4\\Scripts\\Elements\\Map\\character.rb:\n   93      self.x = @character.screen_x\n   94      self.y = @character.screen_y - 8\n   95:     self.z = @character.screen_z(@ch)\n   96  \n   97      # TODO auto name the helper icons\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  303    #     height : character height\n  304    #--------------------------------------------------------------------------\n  305:   def screen_z(height = 0)\n  306  \n  307      return 0 if @below\n\n2 matches across 2 files\n\n\nSearching 136 files for \"pop_bulb\"\n\nC:\\Aveyond4\\Scripts\\Functions\\effects.rb:\n   81  end\n   82  \n   83: def pop_bulb(ev)\n   84  	pop_icon(ev,\"misc/bulb\")\n   85  end\n\n1 match in 1 file\n\n\nSearching 136 files for \"pop_huh\"\n\nC:\\Aveyond4\\Scripts\\Functions\\effects.rb:\n   61  \n   62  \n   63: def pop_huh(ev)\n   64  \n   65  	pop_icon(ev,\"misc/exclaim\",\"jump\")\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 5986,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Functions/effects.rb",
			"settings":
			{
				"buffer_size": 1512,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/transfers.rb",
			"settings":
			{
				"buffer_size": 2196,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#==============================================================================\n# ** Game_Player\n#------------------------------------------------------------------------------\n#  This class handles the player. Its functions include event starting\n#  determinants and map scrolling. Refer to \"$game_player\" for the one\n#  instance of this class.\n#==============================================================================\n\nclass Game_Player < Game_Character\n\n  attr_accessor :transferring      # player place movement flag\n  attr_accessor :trans_type \n\n  def initialize\n    super\n    looklike(\"boy\")\n    @transferring = false\n    @xfer_data = nil\n    @trans_type = :cross\n    @static = false\n  end\n\n  def transfer(map,x,y,dir)\n    @transferring = true\n    @xfer_data = [map,x,y,dir]\n  end\n\n  def transfer_to(map,target,after=nil)\n    @transferring = true\n    @xfer_data = [map,target,after]\n  end\n\n  def name\n    return \"Player\"\n  end\n\n  def looklike(char)\n    self.character_name = \"Player/#{char}\"\n  end\n\n  def static\n    @static = true\n  end\n\n  #--------------------------------------------------------------------------\n  # * Passable Determinants\n  #--------------------------------------------------------------------------\n  def passable?(x, y, d)\n    if DEBUG and Input.press?(Input::CTRL)\n      return true\n    end\n    super\n  end\n\n  #--------------------------------------------------------------------------\n  # * Same Position Starting Determinant\n  #--------------------------------------------------------------------------\n  def check_event_trigger_here(triggers)\n    result = false\n    # If event is running\n    if $map.interpreter.running?\n      return result\n    end\n    # All event loops\n    for event in $map.events.values\n      # If event coordinates and triggers are consistent\n      if event.collide?(@x,@y) and triggers.include?(event.trigger)\n      #if event.x == @x and event.y == @y and triggers.include?(event.trigger)\n        # If starting determinant is same position event (other than jumping)\n        if not event.jumping? and event.over_trigger?\n          event.start\n          result = true\n        end\n      end\n    end\n    return result\n  end\n\n  #--------------------------------------------------------------------------\n  # * Front Envent Starting Determinant\n  #--------------------------------------------------------------------------\n  def check_event_trigger_there(triggers)\n    result = false\n    # If event is running\n    if $map.interpreter.running?\n      return result\n    end\n\n    # Calculate front event coordinates\n    new_x = @x + (@direction == 6 ? 1 : @direction == 4 ? -1 : 0)\n    new_y = @y + (@direction == 2 ? 1 : @direction == 8 ? -1 : 0)\n    \n    # All event loops\n    for event in $map.events.values\n      # If event coordinates and triggers are consistent\n      if event.at?(new_x,new_y) &&\n         triggers.include?(event.trigger) and event.list.size > 1\n\n\n        # If starting determinant is front event (other than jumping)\n        if !event.jumping? and !event.over_trigger?\n          event.start\n          result = true\n        end\n      end\n    end\n    # If fitting event is not found\n\n    # COUNTER CHECK\n\n    if result == false\n\n      # If front tile is a counter\n      if $map.counter?(new_x, new_y)\n        # Calculate 1 tile inside coordinates\n        new_x += (@direction == 6 ? 1 : @direction == 4 ? -1 : 0)\n        new_y += (@direction == 2 ? 1 : @direction == 8 ? -1 : 0)\n        # All event loops\n        for event in $map.events.values\n          # If event coordinates and triggers are consistent\n          if event.x == new_x and event.y == new_y and\n             triggers.include?(event.trigger) and event.list.size > 1\n            # If starting determinant is front event (other than jumping)\n            if not event.jumping? and not event.over_trigger?\n              event.start\n              result = true\n            end\n          end\n        end\n      end\n    end\n\n    return result\n  end\n\n  #--------------------------------------------------------------------------\n  # * Touch Event Starting Determinant\n  #--------------------------------------------------------------------------\n  def check_event_trigger_touch(x, y)\n        \n    return false if $map.interpreter.running?\n      \n    result = false\n\n    # All event loops\n    for event in $map.events.values\n      # If event coordinates and triggers are consistent\n      if event.at?(x,y) and [1,2].include?(event.trigger)\n        # If starting determinant is front event (other than jumping)\n        if not event.jumping? and not event.over_trigger?\n          #if event.trigger == 2\n            #$battle.setup(event)\n            #return true\n          #else\n            event.start\n            result = true\n          #end\n        end\n      end\n    end\n    return result\n  end\n\n  #--------------------------------------------------------------------------\n  # * Frame Update\n  #--------------------------------------------------------------------------\n  def update\n\n    return if @static\n\n    if @character_name != \"Player/#{$party.leader}\"\n      self.character_name = \"Player/#{$party.leader}\"\n    end\n\n    return super if @move_route_forcing\n    return super(true) if ($scene.busy?) || $debug.busy? # Still finish turn anim\n    return super(true) if $map.interpreter.running? # Still finish turn anim\n\n    transfer_player if @transferring \n\n    # Try menu here\n    if !moving? && $menu.menu_page != nil\n      clear_path\n      $game.queue = Scene_Menu.new\n      return\n    end\n\n    # Unless Interpretter Running, Forcing a Route or Message Showing\n\n    if $mouse.y < 448 && $input.click?\n\n        # Gets Mouse X & Y\n        mx, my = *$mouse.grid\n\n        \n        $audio.sys('walkto',0.7)\n        \n        \n        # Turn Character in direction\n        #turn_toward_pos(mx,my)\n        \n        # Run Pathfinding\n        @event_at_path = $map.event_at(mx, my)\n        @event_at_path = nil if @event_at_path && @event_at_path.through\n        if @event_at_path == nil\n\n          # If walk to empty pos, show fx\n          $scene.add_spark('click',$mouse.x+($map.display_x/4)+3,$mouse.y+($map.display_y/4)+5)\n\n          find_path(mx, my)\n          #@eventarray = @runpath ? $map.events_at(mx, my) : nil\n        else\n\n          # Flash target event\n          flash(@event_at_path)\n\n          dx = @x - @event_at_path.x\n          dy = @y - @event_at_path.y\n\n          if dx.abs > dy.abs\n            if dx > 0\n              find_path(@event_at_path.x+1, @event_at_path.y)\n              @turn_after_path = 'l'\n            else\n              find_path(@event_at_path.x-1, @event_at_path.y)\n              @turn_after_path = 'r'\n            end\n          else\n            if dy > 0\n              find_path(@event_at_path.x, @event_at_path.y+1)\n              @turn_after_path = 'u'\n            else\n              find_path(@event_at_path.x, @event_at_path.y-1)\n              @turn_after_path = 'd'\n            end\n          end\n\n        end\n                \n      end\n    \n    if @move_route_forcing == true\n      clear_path\n      @event_at_path = nil\n    end\n\n    # Clear path if any direction keys pressed\n    clear_path if $input.dir4 != 0\n    \n    # Remember whether or not moving in local variables\n    last_moving = moving?\n    # If moving, event running, move route forcing, and message window\n    # display are all not occurring\n    unless moving? || $map.interpreter.running? || @move_route_forcing\n      case $input.dir4\n        when 2; move_down\n        when 4; move_left\n        when 6; move_right\n        when 8; move_up\n      end\n    end\n\n    # Remember coordinates in local variables\n    last_real_x = @real_x\n    last_real_y = @real_y\n\n    super\n   \n    # If not moving\n    unless moving?\n      \n      # If player was moving last time\n      if last_moving\n        # Event determinant is via touch of same position event\n        result = check_event_trigger_here([1,2])\n      end\n\n      # If C button was pressed\n      if $input.action?\n        # Same position and front event determinant\n        check_event_trigger_here([0])\n        check_event_trigger_there([0,1,2])\n      end\n\n      unless @runpath == true\n        if @event_at_path != nil\n          case @turn_after_path\n            when 'd'\n              @direction = 2\n            when 'l'\n              @direction = 4\n            when 'r'\n              @direction = 6\n            when 'u'\n              @direction = 8\n          end\n          @event_at_path.start\n          @event_at_path = nil\n        end\n      end\n\n    end\n\n  end\n\n  #--------------------------------------------------------------------------\n  # * Teleport the Player\n  #--------------------------------------------------------------------------\n  def transfer_player\n\n    Graphics.freeze\n   \n    @transferring = false\n    $player.clear_path\n\n    # Map to teleport to \n    if $map.id != @xfer_data[0]\n      $map.setup(@xfer_data[0])      \n    end\n\n      ev = gev(@xfer_data[1])\n      \n      if @xfer_data[2] != nil\n        case @xfer_data[2]\n          when 'd'\n            @direction = 2\n          when 'l'\n            @direction = 4\n          when 'r'\n            @direction = 6\n          when 'u'\n            @direction = 8\n        end\n      end\n      dx = 0\n      dy = 0\n      dx = 1 if @direction == 6\n      dx = -1 if @direction == 4\n      dy = 1 if @direction == 2\n      dy = -1 if @direction == 8\n\n\n      tx = ev.x + dx\n      ty = ev.y + dy\n\n      if ev.width > 1\n        tx += ev.width/2\n      end\n\n      if ev.height > 1\n        ty += ev.height/2\n      end\n\n      $player.moveto(tx,ty)\n\n\n      #$player.direction = @xfer_data[3]\n\n      $player.straighten  \n\n      $game.update\n\n      # If next zone is different, start fading?\n      $audio.fadeout\n\n      \n\n      case @trans_type\n\n        when :cross\n          Graphics.transition(16)\n\n        when :cave\n          $scene.overlay.opacity = 255\n          Graphics.transition(45,'Graphics/Transitions/cave') \n          Graphics.freeze\n          $scene.overlay.opacity = 0\n          Graphics.transition(45,'Graphics/Transitions/cave_inv')   \n\n        when :fade\n          $scene.overlay.opacity = 255\n          Graphics.transition(45) \n          Graphics.freeze\n          $scene.overlay.opacity = 0\n          Graphics.transition(45)    \n\n      end\n\n\n\n      # Now do the zone etc\n      $map.setup_audio\n\n    #end\n\n    # AUTO SAVING\n\n    # autosave your game (but not on the ending map)\n   # if !ENDING_MAPS.include?($game_map.map_id)\n   #   save = Scene_Save.new(1)\n   #   save.autosave      \n   # end\n    \n  end\n\nend\n",
			"file": "Model/Map/player.rb",
			"file_size": 10998,
			"file_write_time": 130809808322714761,
			"settings":
			{
				"buffer_size": 10552,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/character.rb",
			"settings":
			{
				"buffer_size": 42479,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/event.rb",
			"settings":
			{
				"buffer_size": 14806,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/poppers.rb",
			"settings":
			{
				"buffer_size": 1755,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/State/progress.rb",
			"settings":
			{
				"buffer_size": 1059,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/witchery.rb",
			"settings":
			{
				"buffer_size": 2364,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/message.rb",
			"settings":
			{
				"buffer_size": 19539,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/grid.rb",
			"settings":
			{
				"buffer_size": 11652,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Widgets/label.rb",
			"settings":
			{
				"buffer_size": 2430,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Aveyond4/Editor/meta/potions.json",
			"settings":
			{
				"buffer_size": 197,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Wizardry.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"eval",
				"RubyEval: ruby_eval"
			],
			[
				"be",
				"BeautifyRuby"
			],
			[
				"b",
				"BeautifyRuby"
			],
			[
				"",
				"BeautifyRuby"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"mode",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"p",
				"Package Control: Install Package"
			]
		],
		"width": 514.0
	},
	"console":
	{
		"height": 172.0,
		"history":
		[
			"which ruby",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Aveyond4/Scripts",
		"/C/Aveyond4/Scripts/Elements",
		"/C/Aveyond4/Scripts/Elements/Map",
		"/C/Aveyond4/Scripts/Elements/Widgets",
		"/C/Aveyond4/Scripts/Functions",
		"/C/Aveyond4/Scripts/Interface",
		"/C/Aveyond4/Scripts/Interface/Battle",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts",
		"/C/Aveyond4/Scripts/Interface/Map",
		"/C/Aveyond4/Scripts/Interface/Map/Parts",
		"/C/Aveyond4/Scripts/Interface/Menu",
		"/C/Aveyond4/Scripts/Interface/Menu/Char",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts",
		"/C/Aveyond4/Scripts/Model",
		"/C/Aveyond4/Scripts/Model/Battle",
		"/C/Aveyond4/Scripts/Model/Map",
		"/C/Aveyond4/Scripts/Model/State",
		"/C/Aveyond4/Scripts/Scenes",
		"/C/Aveyond4/Scripts/System",
		"/C/Aveyond4/Scripts/Utils",
		"/C/Aveyond4/Scripts/Utils/Extensions",
		"/C/Aveyond4/Scripts/Utils/Tweens",
		"/C/Aveyond4/Editor",
		"/C/Aveyond4/Editor/meta"
	],
	"file_history":
	[
		"/C/Aveyond4/Scripts/Model/Map/event.rb",
		"/C/Aveyond4/Scripts/Utils/data_types.rb",
		"/C/Aveyond4/Scripts/Model/Battle/result.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/char.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/status.rb",
		"/C/Aveyond4/Scripts/Model/State/party.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/shop.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/grid.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_1_stats.rb",
		"/C/Aveyond4/Scripts/Scenes/battle.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_4_equips.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/bar.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_3_main.rb",
		"/C/Aveyond4/Scripts/Model/State/battle.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_2_actor.rb",
		"/C/Aveyond4/Editor/meta/items.json",
		"/C/Aveyond4/Scripts/Interface/Menu/journal.rb",
		"/C/Aveyond4/Scripts/Model/State/menu.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/options.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/battlehud.rb",
		"/C/Aveyond4/Scripts/Scenes/menu.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/page_title.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/witchery.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_3_skills.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/char_box_large.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/bar.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/box.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/items.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/main.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/char_box_small.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/list.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_4_victory.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/party.rb",
		"/C/Aveyond4/Scripts/Elements/Map/pop.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/charview.rb",
		"/C/Aveyond4/Scripts/Functions/effects.rb",
		"/C/Aveyond4/Scripts/Model/Map/character.rb",
		"/C/Aveyond4/Scripts/Scenes/base.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/skills.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/profile.rb",
		"/C/Aveyond4/Scripts/Utils/Tweens/tweens.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/equip.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/save.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/load.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/quit.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/dreaming.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/demons.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/help.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/creatures.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/targetcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/skillcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/itemcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/popper.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/base.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/item_box.rb",
		"/C/Aveyond4/Scripts/Model/Map/map.rb",
		"/C/Aveyond4/Scripts/Model/Map/player.rb",
		"/C/Aveyond4/Scripts/Functions/poppers.rb",
		"/C/Aveyond4/Scripts/Utils/ruby.rb",
		"/C/Aveyond4/Editor/meta/quests.json",
		"/C/Aveyond4/Editor/meta/actors.json",
		"/C/Aveyond4/Editor/meta/skills.json",
		"/C/Aveyond4/Editor/meta/gear.json",
		"/C/Aveyond4/Editor/meta/numbers.json",
		"/C/Aveyond4/Editor/meta/profiles.json",
		"/C/Aveyond4/Scripts/Elements/Widgets/label.rb",
		"/C/Aveyond4/Scripts/Model/Map/interpreter.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/message.rb",
		"/C/Aveyond4/Scripts/Functions/events.rb",
		"/C/Aveyond4/Editor/edit.html",
		"/C/Aveyond4/Scripts/Model/Battle/battler_5_xp.rb",
		"/C/Aveyond4/Scripts/System/data.rb",
		"/C/Aveyond4/Scripts/Interface/Map/screen.rb",
		"/C/Aveyond4/Editor/meta/enemies.json",
		"/C/Aveyond4/Scripts/Interface/Menu/equip.rb",
		"/C/Aveyond4/Scripts/Functions/system.rb",
		"/C/Aveyond4/Scripts/System/game.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Char/stats_base.rb",
		"/C/Aveyond4/Scripts/System/fonts.rb",
		"/C/Aveyond4/Scripts/System/mouse.rb",
		"/C/Aveyond4/Scripts/System/cache.rb",
		"/C/Aveyond4/Scripts/System/audio.rb",
		"/C/Aveyond4/Scripts/System/keyboard.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/page_tabs.rb",
		"/C/Aveyond4/Scripts/System/input.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/button.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/info_box.rb",
		"/C/Aveyond4/Scripts/System/settings.rb",
		"/F/hahahahhaha/Modules/suplex/scene/effects/pyro.monkey",
		"/F/hahahahhaha/Modules/suplex/scene/stackmap/stacksprite.monkey",
		"/F/hahahahhaha/Modules/suplex/scene/stackmap/stackmap.monkey",
		"/F/hahahahhaha/Modules/suplex/managers/data.monkey",
		"/F/hahahahhaha/Games/TestZone/misc/widgets.monkey",
		"/F/hahahahhaha/Games/TestZone/misc/pyro_ed.monkey",
		"/C/Aveyond4/Scripts/System/files.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/list_common.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/right_page.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/screenshot.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/picsave2.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/BitmapEx.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/baseEX.rb",
		"/C/Aveyond4/Scripts/System/debug.rb",
		"/C/Users/Dan/AppData/Local/Temp/7zOE3CE.tmp/BitmapEx.rb",
		"/C/Users/Dan/AppData/Local/Temp/7zO33D4.tmp/main.rb",
		"/C/Users/Dan/AppData/Local/Temp/7zOEFD1.tmp/base.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/picsave.rb",
		"/C/Aveyond4/README.md",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/info.rb",
		"/C/Aveyond4/Scripts/Elements/Map/panorama.rb",
		"/C/Aveyond4/Scripts/Scenes/map.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/spritegroup.rb",
		"/C/Aveyond4/Scripts/System/tweens.rb",
		"/C/Aveyond4/Scripts/Functions/transfers.rb",
		"/C/Aveyond4/Scripts/Elements/Map/character.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_1_intro.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/actorcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/port_full.rb",
		"/C/Aveyond4/Scripts/Elements/Map/spark.rb",
		"/C/Aveyond4/Scripts/Functions/party.rb",
		"/C/Aveyond4/Scripts/Model/State/progress.rb",
		"/C/Aveyond4/Scripts/main.rb",
		"/C/Aveyond4/Scripts/Functions/inventory.rb",
		"/C/Aveyond4/Scripts/Functions/sparks.rb",
		"/C/Aveyond4/Scripts/Functions/shop.rb",
		"/C/Aveyond4/Scripts/Functions/common.rb",
		"/C/Aveyond4/Editor/meta/zones.json",
		"/C/Aveyond4/Scripts/Elements/Widgets/old_list.rb"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"C:\\Aveyond4\\Scripts\\",
			"C:\\Aveyond4\\Scripts\\Utils\\Funcs",
			"C:\\Aveyond4\\Scripts",
			"C:\\Aveyond4\\\\",
			"C:\\Aveyond4\\Editor\\",
			"C:\\Aveyond4\\Scripts\\",
			"C:\\Aveyond4\\Scripts\\Widgets",
			"C:\\Aveyond4\\Scripts",
			"C:\\FairyTale\\Scripts"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pop_huh",
			"pop_bulb",
			"below",
			"screen_z",
			"below",
			"flash",
			"shake_1",
			"transfer_cave_in",
			"open_choices",
			"choices",
			"calc",
			"possible_targets",
			"pop_num",
			"class Popper",
			"def pop_num",
			"add_party_mem",
			"ProcTween",
			"def skill_list",
			"Color.new",
			"choose",
			"change_sub",
			"closing",
			"u",
			"clear",
			".call",
			"unknown",
			"open_CHOI",
			"add_choice",
			"choice",
			"item",
			"open_buy_item",
			"gain_mana",
			"mana",
			"dmg-base",
			"setup",
			"witchery",
			"attackable?",
			"character_name",
			"$battle.set",
			"START BATTLE WITH",
			"add_slot",
			"menu",
			"queue",
			"move_type_custom",
			"force_move_",
			"move_route",
			"increase_steps",
			"@stop_count",
			"update_s",
			"stop",
			"update_s",
			"Label.new",
			"atmosphere",
			".gain",
			".",
			"atmosphere",
			"fadeout",
			"change_cursor",
			"\"Default",
			"leader",
			"log_scr",
			"rclick",
			"$input.cancel?",
			"cancel",
			"open_main_menu",
			"add_wide",
			"current",
			"HUH",
			"setup",
			"data[2]",
			"draw_misc",
			"open_main_menu",
			"refresh",
			"blur",
			"DL",
			"export",
			"@map_image = ",
			"$mouse",
			"open_main_menu",
			"open_menu",
			"$input",
			"start_battle",
			"@scroll_idx",
			"save_file_list",
			"display_x",
			"add_spark",
			"cursor",
			"flag",
			"flash",
			"shake",
			"is_actor",
			"init",
			"init_enemy",
			"choose_action",
			"interpreter.",
			"show_text",
			"busy",
			"@vn_port",
			"sparks",
			"die",
			"$input.",
			"def grid",
			"cursor",
			"through",
			"path",
			"call_change",
			"$input.action? ||",
			"def add_spark",
			"can_scroll",
			"current",
			"cancel",
			"setup",
			"clear",
			"hide",
			"transform",
			"build_target_list",
			"selection",
			"def update",
			"update",
			"sys",
			"zone",
			"zone\\",
			"child",
			"common",
			"draw_item",
			"item",
			"@current",
			"current"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"box",
			"load",
			"@active_battler",
			"select_skill",
			"@keys_held",
			"$cache",
			"$tbl_sorting",
			"$tbl_per_page",
			"$tbl_offset",
			"$json_data",
			"$meta_data",
			"$data_type",
			"_data_type",
			"@data_type",
			"Tween",
			"tween",
			"$map",
			"$player",
			"$map",
			"$player",
			"$map",
			"$party",
			"$map",
			"$player",
			"$map",
			"$game_player",
			"$game_map",
			"get_ev",
			"@inventory",
			"@items"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Aveyond4/Editor/edit.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5975,
						"regions":
						{
						},
						"selection":
						[
							[
								2497,
								2497
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 883.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Model/State/party.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7040,
						"regions":
						{
						},
						"selection":
						[
							[
								5700,
								5700
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4600.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5986,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										118,
										134
									],
									[
										329,
										336
									],
									[
										503,
										508
									],
									[
										541,
										546
									],
									[
										576,
										581
									],
									[
										620,
										625
									],
									[
										655,
										660
									],
									[
										774,
										779
									],
									[
										806,
										811
									],
									[
										874,
										879
									],
									[
										906,
										911
									],
									[
										1063,
										1068
									],
									[
										1215,
										1220
									],
									[
										1395,
										1400
									],
									[
										1428,
										1433
									],
									[
										1587,
										1592
									],
									[
										1716,
										1721
									],
									[
										1858,
										1863
									],
									[
										2098,
										2103
									],
									[
										2246,
										2251
									],
									[
										2452,
										2457
									],
									[
										2605,
										2610
									],
									[
										2744,
										2749
									],
									[
										2944,
										2949
									],
									[
										3120,
										3125
									],
									[
										3267,
										3272
									],
									[
										3350,
										3355
									],
									[
										3476,
										3481
									],
									[
										3512,
										3517
									],
									[
										3765,
										3770
									],
									[
										4010,
										4015
									],
									[
										4195,
										4200
									],
									[
										4361,
										4366
									],
									[
										4506,
										4511
									],
									[
										4622,
										4627
									],
									[
										4754,
										4759
									],
									[
										4779,
										4784
									],
									[
										5013,
										5018
									],
									[
										5276,
										5284
									],
									[
										5527,
										5535
									],
									[
										5722,
										5730
									],
									[
										5904,
										5911
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5904,
								5904
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 7,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5020.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Functions/effects.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1512,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1195.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Functions/transfers.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2196,
						"regions":
						{
						},
						"selection":
						[
							[
								1059,
								1059
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 844.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Model/Map/player.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10552,
						"regions":
						{
						},
						"selection":
						[
							[
								9382,
								9382
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6482.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Model/Map/character.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42479,
						"regions":
						{
						},
						"selection":
						[
							[
								8903,
								8903
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5672.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Model/Map/event.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14806,
						"regions":
						{
						},
						"selection":
						[
							[
								11895,
								11957
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9272.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Functions/poppers.rb",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1755,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Model/State/progress.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1059,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Functions/witchery.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2364,
						"regions":
						{
						},
						"selection":
						[
							[
								1585,
								1585
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1780.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Interface/Map/Parts/message.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19539,
						"regions":
						{
						},
						"selection":
						[
							[
								5951,
								5953
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5366.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Interface/Map/Parts/grid.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11652,
						"regions":
						{
						},
						"selection":
						[
							[
								3512,
								3512
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3863.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "Elements/Widgets/label.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2430,
						"regions":
						{
						},
						"selection":
						[
							[
								175,
								175
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/Aveyond4/Editor/meta/potions.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 197,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": true,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 119.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Wizardry.sublime-build",
	"project": "Aveyond4.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"player",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"playe",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"mess",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"msg",
				"Scripts\\Model\\State\\progress.rb"
			],
			[
				"grid",
				"Scripts\\Interface\\Map\\Parts\\grid.rb"
			],
			[
				"party",
				"Scripts\\Model\\State\\party.rb"
			],
			[
				"par",
				"Scripts\\Model\\State\\party.rb"
			],
			[
				"messa",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"part",
				"Scripts\\Model\\State\\party.rb"
			],
			[
				"map",
				"Scripts\\Model\\Map\\map.rb"
			],
			[
				"play",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"menu",
				"Scripts\\Model\\State\\menu.rb"
			],
			[
				"cache",
				"Scripts\\System\\cache.rb"
			],
			[
				"bar",
				"Scripts\\Interface\\Map\\Parts\\bar.rb"
			],
			[
				"char",
				"Scripts\\Interface\\Menu\\Parts\\char_box_large.rb"
			],
			[
				"key",
				"Scripts\\System\\keyboard.rb"
			],
			[
				"input",
				"Scripts\\System\\input.rb"
			],
			[
				"mouse",
				"Scripts\\System\\mouse.rb"
			],
			[
				"de",
				"Scripts\\System\\debug.rb"
			],
			[
				"pano",
				"Scripts\\Elements\\Map\\panorama.rb"
			],
			[
				"sprite",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"mes",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"tween",
				"Scripts\\System\\tweens.rb"
			],
			[
				"inter",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"message",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"spark",
				"Scripts\\Elements\\Map\\spark.rb"
			],
			[
				"settings",
				"Scripts\\System\\settings.rb"
			],
			[
				"spriteg",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"int",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"list",
				"Scripts\\Elements\\Widgets\\list.rb"
			],
			[
				"battle",
				"Scripts\\Scenes\\battle.rb"
			],
			[
				"chara",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"audio",
				"Scripts\\System\\audio.rb"
			],
			[
				"event",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"mob",
				"Scripts\\Model\\Map\\moblin.rb"
			],
			[
				"spr",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"cach",
				"Scripts\\System\\cache.rb"
			],
			[
				"font",
				"Scripts\\System\\fonts.rb"
			],
			[
				"screen",
				"Scripts\\Interface\\Map\\screen.rb"
			],
			[
				"hud",
				"Scripts\\Interface\\Battle\\battlehud.rb"
			],
			[
				"interp",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"eve",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"box",
				"Scripts\\Elements\\Widgets\\box.rb"
			],
			[
				"fonts",
				"Scripts\\System\\fonts.rb"
			],
			[
				"char_bo",
				"Scripts\\Interface\\Menu\\Parts\\char_box_small.rb"
			],
			[
				"settin",
				"Scripts\\System\\settings.rb"
			],
			[
				"ply",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"even",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"prog",
				"Scripts\\Model\\State\\progress.rb"
			],
			[
				"progre",
				"Scripts\\Functions\\progress.rb"
			],
			[
				"game",
				"Scripts\\System\\game.rb"
			],
			[
				"lab",
				"Scripts\\Elements\\Widgets\\label.rb"
			],
			[
				"info",
				"Scripts\\Interface\\Menu\\Parts\\info_box.rb"
			],
			[
				"port",
				"Scripts\\Interface\\Menu\\Parts\\port_full.rb"
			],
			[
				"spritegour",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"data",
				"Scripts\\System\\data.rb"
			],
			[
				"character",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"tweens",
				"Scripts\\System\\tweens.rb"
			],
			[
				"charbox",
				"Scripts\\Interface\\Menu\\Parts\\char_box_large.rb"
			],
			[
				"actor",
				"Scripts\\Model\\Battle\\actor.rb"
			],
			[
				"ouse",
				"Scripts\\System\\mouse.rb"
			],
			[
				"cara",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"cahe",
				"Scripts\\System\\cache.rb"
			],
			[
				"cha",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"mover",
				"Scripts\\Utils\\Funcs\\moveroute.rb"
			],
			[
				"charac",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"inte",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"group",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"list.rb",
				"Scripts\\Elements\\Widgets\\list.rb"
			],
			[
				"actorcmd",
				"Scripts\\Interface\\Battle\\actorcmd.rb"
			],
			[
				"actorcm",
				"Scripts\\Interface\\Battle\\actorcmd.rb"
			],
			[
				"main",
				"Scripts\\main.rb"
			],
			[
				"tilema",
				"Scripts\\Elements\\Map\\tilemap.rb"
			],
			[
				"tilem",
				"Scripts\\Elements\\Map\\tilemap.rb"
			],
			[
				"scene",
				"Scripts\\Scenes\\map.rb"
			],
			[
				"tilemap",
				"Scripts\\Utils\\tilemap.rb"
			],
			[
				"tile",
				"Scripts\\Utils\\tilemap.rb"
			],
			[
				"text",
				"Scripts\\Ui\\textbox.rb"
			],
			[
				"debu",
				"Scripts\\Managers\\debug.rb"
			],
			[
				"keyb",
				"Scripts\\Managers\\keyboard.rb"
			],
			[
				"cons",
				"Scripts\\Utils\\Debug\\console.rb"
			],
			[
				"conso",
				"Scripts\\Utils\\Debug\\console.rb"
			],
			[
				"deb",
				"Scripts\\Managers\\debug.rb"
			],
			[
				"debug",
				"Scripts\\Managers\\debug.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
