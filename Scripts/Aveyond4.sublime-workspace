{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sele",
				"selected_box"
			],
			[
				"skip",
				"skip_wait_test"
			],
			[
				"enemy",
				"enemy_types"
			],
			[
				"att",
				"attr_reader"
			],
			[
				"attr",
				"attr_reader"
			],
			[
				"display",
				"display_x"
			],
			[
				"choi",
				"choices"
			],
			[
				"show",
				"showpattern"
			],
			[
				"di",
				"display_y"
			],
			[
				"Weather",
				"Weather_DarkDots"
			],
			[
				"at",
				"atmosphere"
			],
			[
				"per",
				"per_page"
			],
			[
				"Mnu_",
				"Mnu_Base"
			],
			[
				"anim",
				"anim_seq"
			],
			[
				"sound",
				"sound_delay"
			],
			[
				"pos",
				"positions"
			],
			[
				"env",
				"environmental"
			],
			[
				"need",
				"need_refresh"
			],
			[
				"log_",
				"log_info"
			],
			[
				"arg",
				"argstring"
			],
			[
				"charact",
				"character_name"
			],
			[
				"total",
				"total_frames"
			],
			[
				"att_r",
				"attr_reader"
			],
			[
				"fixed",
				"fixed_width"
			],
			[
				"fix",
				"fix_width"
			],
			[
				"po",
				"poppers"
			],
			[
				"vp",
				"vp_pops"
			],
			[
				"active",
				"active_battler"
			],
			[
				"par",
				"parent"
			],
			[
				"draw_",
				"debug_draw_fps"
			],
			[
				"camera",
				"camera_to"
			],
			[
				"ev",
				"event_at"
			],
			[
				"chara",
				"character_name"
			],
			[
				"log",
				"log_info"
			],
			[
				"Sprite",
				"SpriteGroup"
			],
			[
				"point",
				"point_at"
			],
			[
				"filter",
				"filter_by"
			],
			[
				"tra",
				"transition"
			],
			[
				"push",
				"push_scene"
			],
			[
				"Ui",
				"Ui_Message"
			],
			[
				"PAD",
				"PADDING_Y"
			],
			[
				"PADD",
				"PADDING_X"
			],
			[
				"disp",
				"display_x"
			],
			[
				"tileset",
				"tileset_id"
			],
			[
				"idx",
				"idx_sprite"
			],
			[
				"refres",
				"refresh_osd"
			],
			[
				"conso",
				"console_text"
			],
			[
				"cons",
				"console"
			],
			[
				"VK",
				"VK_TAB"
			],
			[
				"console",
				"console_sprite"
			],
			[
				"window",
				"window_bmp"
			],
			[
				"Game_a",
				"Game_Actor"
			],
			[
				"frame",
				"frame_count"
			],
			[
				"del",
				"delete"
			],
			[
				"disa",
				"disabled"
			],
			[
				"get",
				"getloc"
			],
			[
				"common_ev",
				"common_event_id"
			],
			[
				"refre",
				"refresh_table"
			],
			[
				"string",
				"string_similarity"
			],
			[
				"icon",
				"icon_data"
			],
			[
				"refresh",
				"refresh_console"
			],
			[
				"INFO",
				"INFO_COLOR"
			],
			[
				"quick",
				"quick_start"
			],
			[
				"instanc",
				"instance_variable_set"
			],
			[
				"instance",
				"instance_variables〔function〕"
			],
			[
				"text",
				"textStatus"
			],
			[
				"json",
				"json_data"
			],
			[
				"export",
				"export_json"
			],
			[
				"sort",
				"sort_col"
			],
			[
				"pad",
				"padding_bottom"
			],
			[
				"wait",
				"wait_for_message"
			],
			[
				"Widget_label",
				"Widget_SuperLabel"
			],
			[
				"circ",
				"circ_in_out"
			],
			[
				"quad_in",
				"quad_in_out"
			],
			[
				"Super",
				"Sprite_Superbox"
			],
			[
				"Widt",
				"Widget_Clicker"
			],
			[
				"lett",
				"letterlayer"
			],
			[
				"Widg",
				"Widget_Image"
			],
			[
				"linear",
				"linear_tween"
			],
			[
				"Par",
				"ParallelNano"
			],
			[
				"start",
				"start_instants"
			],
			[
				"dis",
				"disable_next_music"
			],
			[
				"For",
				"ForktongueCaverns"
			],
			[
				"spawn",
				"spawn_puzzle"
			],
			[
				"keyl",
				"keylock"
			],
			[
				"max",
				"max_width"
			],
			[
				"opp",
				"get_opposite_region"
			],
			[
				"targ",
				"target_loc"
			],
			[
				"room",
				"room_dir_to_rpg_dir"
			],
			[
				"from",
				"from_region"
			],
			[
				"fill",
				"fill_edge"
			],
			[
				"XF",
				"XFER_DOWN"
			],
			[
				"bot",
				"bottom_row"
			],
			[
				"net",
				"next_in_direction"
			],
			[
				"key",
				"key_level"
			],
			[
				"MAX",
				"MAX_SPACES"
			],
			[
				"find",
				"find_boss"
			],
			[
				"norm",
				"normalize_intensity"
			],
			[
				"next",
				"next_level_base_intensity"
			],
			[
				"INTE",
				"INTENSITY_GROWTH_JITTER"
			],
			[
				"INT",
				"INTENSITY_GROWTH_JITTER"
			],
			[
				"set",
				"set_item"
			],
			[
				"swit",
				"switch_room"
			],
			[
				"STA",
				"STATE_EITHER"
			],
			[
				"base",
				"base_room"
			],
			[
				"given",
				"given_state"
			],
			[
				"any",
				"any_locks"
			],
			[
				"remove",
				"remove_descendants_from_list"
			],
			[
				"bos",
				"boss_key"
			],
			[
				"boss",
				"boss_room"
			],
			[
				"new",
				"new_key_level"
			],
			[
				"pare",
				"parent"
			],
			[
				"paren",
				"parent_room"
			],
			[
				"cho",
				"choose_room_with_free_edge"
			],
			[
				"get_ma",
				"get_max_keys"
			],
			[
				"rooms",
				"rooms_per_lock"
			],
			[
				"SWI",
				"SWITCH_OFF"
			],
			[
				"stat",
				"STATE_OFF"
			],
			[
				"implies",
				"implies_condition"
			],
			[
				"Dun",
				"DunGenRoom"
			],
			[
				"Rayc",
				"Raycast	ray, hitInfo, distance"
			],
			[
				"Rayca",
				"RaycastHit"
			],
			[
				"On",
				"OnCollisionStay	collision"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Scenes/battle_2_actor.rb",
			"settings":
			{
				"buffer_size": 3613,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Scenes/battle_3_main.rb",
			"settings":
			{
				"buffer_size": 2708,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/character.rb",
			"settings":
			{
				"buffer_size": 42235,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/audio.rb",
			"settings":
			{
				"buffer_size": 4301,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/event.rb",
			"settings":
			{
				"buffer_size": 13910,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Map/weather.rb",
			"settings":
			{
				"buffer_size": 1555,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/message.rb",
			"settings":
			{
				"buffer_size": 17536,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/battle.rb",
			"settings":
			{
				"buffer_size": 52,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/sparks.rb",
			"settings":
			{
				"buffer_size": 885,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Map/spark.rb",
			"settings":
			{
				"buffer_size": 1406,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/player.rb",
			"settings":
			{
				"buffer_size": 10073,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/transfers.rb",
			"settings":
			{
				"buffer_size": 1295,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/State/battle.rb",
			"settings":
			{
				"buffer_size": 3463,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Aveyond4/Editor/meta/numbers.json",
			"settings":
			{
				"buffer_size": 90,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/data.rb",
			"settings":
			{
				"buffer_size": 4118,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Aveyond4/Editor/edit.html",
			"settings":
			{
				"buffer_size": 5568,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Aveyond4/Editor/edit.js",
			"settings":
			{
				"buffer_size": 19017,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Battle/battler_2_states.rb",
			"settings":
			{
				"buffer_size": 2759,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Battle/battler.rb",
			"settings":
			{
				"buffer_size": 2713,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Battle/battler_1_stats.rb",
			"settings":
			{
				"buffer_size": 1886,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Aveyond4/Editor/meta/actors.json",
			"settings":
			{
				"buffer_size": 275,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Battle/battler_3_skills.rb",
			"settings":
			{
				"buffer_size": 908,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Battle/battlehud.rb",
			"settings":
			{
				"buffer_size": 948,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Widgets/label.rb",
			"settings":
			{
				"buffer_size": 2428,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Widgets/bar.rb",
			"settings":
			{
				"buffer_size": 786,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Battle/Parts/skillcmd.rb",
			"settings":
			{
				"buffer_size": 471,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Battle/Parts/itemcmd.rb",
			"settings":
			{
				"buffer_size": 897,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Map/character.rb",
			"settings":
			{
				"buffer_size": 3755,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/audio.rb",
			"settings":
			{
				"buffer_size": 151,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/shop.rb",
			"settings":
			{
				"buffer_size": 867,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/menus.rb",
			"settings":
			{
				"buffer_size": 296,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 128 files for \"Scene_Menu\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Functions\\menus.rb:\n    2  def open_main_menu\n    3  	$game.menu_page = \"Main\"\n    4: 	$game.push_scene(Scene_Menu.new)\n    5  end\n    6  \n    7  def open_shop_buy\n    8  	$game.menu_page = \"Shop\"\n    9: 	$game.push_scene(Scene_Menu.new)\n   10  end\n   11  \n   12  def open_shop_sell\n   13  	$game.menu_page = \"Shop\"\n   14: 	$game.push_scene(Scene_Menu.new)\n   15  end\n   16  \n\nC:\\Aveyond4\\Scripts\\Interface\\Map\\screen.rb:\n   69  	  return if busy? or $map.interpreter.running?\n   70        if $input.cancel? || Input.trigger?(Input::F7)\n   71:         $game.push_scene(Scene_Menu.new)\n   72        end\n   73  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\interpreter.rb:\n  181  \n  182        # Misc hud busy\n  183:       return if $scene.is_a?(Scene_Menu)\n  184        return if $scene.busy?\n  185  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  189  \n  190      @interpreter.update\n  191:     return if $scene.is_a?(Scene_Menu)\n  192  \n  193      # Anti lag here\n\nC:\\Aveyond4\\Scripts\\Scenes\\base.rb:\n   88    def update\n   89  \n   90:     return if $scene.is_a?(Scene_Menu)\n   91  \n   92      # Model update\n   93      @map.update      \n   94:     return if $scene.is_a?(Scene_Menu)\n   95      @player.update\n   96  \n\nC:\\Aveyond4\\Scripts\\Scenes\\menu.rb:\n    1  #==============================================================================\n    2: # ** Scene_Menu\n    3  #==============================================================================\n    4  \n    5: class Scene_Menu\n    6    \n    7    #--------------------------------------------------------------------------\n\n10 matches across 6 files\n\n\nSearching 128 files for \"Scene_Menu\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Functions\\menus.rb:\n    2  def open_main_menu\n    3  	$game.menu_page = \"Main\"\n    4: 	$game.push_scene(Scene_Menu.new)\n    5  end\n    6  \n    7  def open_shop_buy\n    8  	$game.menu_page = \"Shop\"\n    9: 	$game.push_scene(Scene_Menu.new)\n   10  end\n   11  \n   12  def open_shop_sell\n   13  	$game.menu_page = \"Shop\"\n   14: 	$game.push_scene(Scene_Menu.new)\n   15  end\n   16  \n\nC:\\Aveyond4\\Scripts\\Interface\\Map\\screen.rb:\n   70        if $input.cancel? || Input.trigger?(Input::F7)\n   71        	$game.menu_page = \"Main\"\n   72:         $game.push_scene(Scene_Menu.new)\n   73        end\n   74  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\interpreter.rb:\n  181  \n  182        # Misc hud busy\n  183:       return if $scene.is_a?(Scene_Menu)\n  184        return if $scene.busy?\n  185  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  189  \n  190      @interpreter.update\n  191:     return if $scene.is_a?(Scene_Menu)\n  192  \n  193      # Anti lag here\n\nC:\\Aveyond4\\Scripts\\Scenes\\base.rb:\n   88    def update\n   89  \n   90:     return if $scene.is_a?(Scene_Menu)\n   91  \n   92      # Model update\n   93      @map.update      \n   94:     return if $scene.is_a?(Scene_Menu)\n   95      @player.update\n   96  \n\nC:\\Aveyond4\\Scripts\\Scenes\\menu.rb:\n    1  #==============================================================================\n    2: # ** Scene_Menu\n    3  #==============================================================================\n    4  \n    5: class Scene_Menu\n    6    \n    7    #--------------------------------------------------------------------------\n\n10 matches across 6 files\n\n\nSearching 128 files for \"change_fogs\" (case sensitive)\n\n0 matches\n\nSearching 128 files for \"change_tint\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  122          $scene.change_weather(@zone.weather)\n  123          $scene.change_fog(@zone.fog)\n  124:         $scene.change_tint(@zone.tint)\n  125          $scene.change_panoramas(@zone.panoramas)\n  126  \n\nC:\\Aveyond4\\Scripts\\Scenes\\base.rb:\n  148    end\n  149  \n  150:   def change_tint(tint)\n  151  \n  152    end\n\n2 matches across 2 files\n\n\nSearching 128 files for \"enemy\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Battle\\battler.rb:\n   56      @ev = nil # Mid battle hold even number for easy access\n   57  \n   58:     @form = nil # <- fox or frog or etc, maybe for battler? turn enemy to frog he shoot water at you? interesting\n   59  \n   60      recover_all\n   ..\n   97    end\n   98  \n   99:   def init_enemy(id)\n  100  \n  101      @is_actor = false\n  ...\n  104      @id = id\n  105  \n  106:     # Get stat plus per enemy\n  107      if data.stats != \"\"\n  108        data.stats.split(\"\\n\").each{ |m|\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\event.rb:\n  415      end\n  416  \n  417:     # Change enemy gfx\n  418      if @character_name == \"!!!Monster\"\n  419:       @character_name = \"Monsters/#{$battle.enemy_types[@pattern]}\"\n  420      end\n  421  \n\nC:\\Aveyond4\\Scripts\\Model\\State\\battle.rb:\n    5  \n    6    attr_reader :enemies\n    7:   attr_reader :enemy_types\n    8  \n    9  	def initialize\n   10:     @enemy_types = []\n   11  		@enemies = []\n   12      @props = []\n   ..\n   18    # Enemies for this zone from zone data\n   19    def change_enemies(enemies)\n   20:     @enemy_types = enemies.split(\"\\n\")\n   21    end\n   22  \n   23:   def add(enemy)\n   24      battler = Game_Battler.new\n   25:     battler.init_enemy(enemy)\n   26      @enemies.push(battler)\n   27    end\n   ..\n  131        when 'all'\n  132  \n  133:         # All enemy\n  134          if attacker.is_actor?\n  135            return @enemies.select{ |b| b.attackable? }\n\nC:\\Aveyond4\\Scripts\\Scenes\\battle_3_main.rb:\n    4    def phase_main_init\n    5     	\n    6:     # Choose enemy actions\n    7      $battle.enemies.each{ |e|\n    8      	e.choose_action\n\nC:\\Aveyond4\\Scripts\\Utils\\rpgmodule.rb:\n   75  #       @escape_se = RPG::AudioFile.new(\"\", 80)\n   76  #       @actor_collapse_se = RPG::AudioFile.new(\"\", 80)\n   77: #       @enemy_collapse_se = RPG::AudioFile.new(\"\", 80)\n   78  #       @words = RPG::System::Words.new\n   79  #       @test_battlers = []\n   ..\n  111  #     attr_accessor :escape_se\n  112  #     attr_accessor :actor_collapse_se\n  113: #     attr_accessor :enemy_collapse_se\n  114  #     attr_accessor :words\n  115  #     attr_accessor :test_battlers\n\n15 matches across 5 files\n\n\nSearching 128 files for \"enemies\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Battle\\battler.rb:\n  101      @is_actor = false\n  102  \n  103:     data = $data.enemies[id]\n  104      @id = id\n  105  \n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  121          $scene.change_panoramas(@zone.panoramas)\n  122  \n  123:         # Prep enemies for this zone\n  124:         $battle.change_enemies(@zone.enemies)\n  125  \n  126        end\n\nC:\\Aveyond4\\Scripts\\Model\\State\\battle.rb:\n    4    attr_accessor :map, :weather\n    5  \n    6:   attr_reader :enemies\n    7    attr_reader :enemy_types\n    8  \n    9  	def initialize\n   10      @enemy_types = []\n   11: 		@enemies = []\n   12      @props = []\n   13      @actor_index = 0\n   ..\n   17  \n   18    # Enemies for this zone from zone data\n   19:   def change_enemies(enemies)\n   20:     @enemy_types = enemies.split(\"\\n\")\n   21    end\n   22  \n   ..\n   24      battler = Game_Battler.new\n   25      battler.init_enemy(enemy)\n   26:     @enemies.push(battler)\n   27    end\n   28  \n   ..\n   38    def build_attack_queue\n   39  \n   40:     return ($party.active_battlers + @enemies).shuffle\n   41  \n   42    end\n   ..\n  106  \n  107          if attacker.is_actor?\n  108:           return @enemies.select{ |b| b.attackable? }.sample\n  109          else\n  110            return $party.active.select{ |b| b.attackable? }.sample\n  ...\n  115          # Random 2\n  116          if attacker.is_actor?\n  117:           return @enemies.select{ |b| b.attackable? }.sample(2)\n  118          else\n  119            return $party.active.select{ |b| b.attackable? }.sample(2)\n  ...\n  124          # Random 3\n  125          if attacker.is_actor?\n  126:           return @enemies.select{ |b| b.attackable? }.sample(3)\n  127          else\n  128            return $party.active.select{ |b| b.attackable? }.sample(3)\n  ...\n  133          # All enemy\n  134          if attacker.is_actor?\n  135:           return @enemies.select{ |b| b.attackable? }\n  136          else\n  137            return $party.active.select{ |b| b.attackable? }\n  ...\n  144            return $party.active.select{ |b| b.attackable? }\n  145          else          \n  146:           return @enemies.select{ |b| b.attackable? }\n  147          end\n  148  \n\nC:\\Aveyond4\\Scripts\\Scenes\\battle.rb:\n   54      [0,1,2,3,4].each{ |i| \n   55        ev = @map.event_by_evname(\"E.#{i}\") \n   56:       if $battle.enemies.count > i\n   57:         $battle.enemies[i].ev = ev\n   58        end\n   59      }\n\nC:\\Aveyond4\\Scripts\\Scenes\\battle_2_actor.rb:\n  112      # If single, targetable?\n  113      #if [\"one\",\"ally\"].include?($data.skills[id].scope)\n  114:       targets = $battle.enemies #$battle.build_target_list(@active_battler)\n  115        @target_cmd.setup(targets)\n  116        @phase = :actor_target      \n\nC:\\Aveyond4\\Scripts\\Scenes\\battle_3_main.rb:\n    5     	\n    6      # Choose enemy actions\n    7:     $battle.enemies.each{ |e|\n    8      	e.choose_action\n    9      }\n\nC:\\Aveyond4\\Scripts\\System\\data.rb:\n   12  \n   13    attr_reader :actors\n   14:   attr_reader :enemies\n   15    attr_reader :skills\n   16    attr_reader :states\n   ..\n   46  \n   47      @actors = load_json(\"actors\",ActorData)\n   48:     @enemies = load_json(\"enemies\",EnemyData)\n   49      \n   50      @skills = load_json(\"skills\",SkillData)\n\nC:\\Aveyond4\\Scripts\\Utils\\data_types.rb:\n   64  	attr_reader :fog\n   65  	attr_reader :panoramas\n   66: 	attr_reader :enemies\n   67  end\n   68  \n\n24 matches across 8 files\n\n\nSearching 128 files for \"event_touch\" (case sensitive)\ntouch enSearching 128 files for \"event_touch\" (case sensitive)\n\n0 matches\n\nSearching 128 files for \"touch_event\" (case sensitive)\n\n0 matches\n\nSearching 128 files for \"touch\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  820        $audio.queue('step',24) if terrain_tag == 3\n  821      else\n  822:       # Determine if touch event is triggered IF ENEMY ONLY\n  823:       #check_event_trigger_touch(@x, @y+1)\n  824      end\n  825    end\n  ...\n  847      # If impassable\n  848      else\n  849:       # Determine if touch event is triggered\n  850:       #check_event_trigger_touch(@x-1, @y)\n  851      end\n  852    end\n  ...\n  873      # If impassable\n  874      else\n  875:       # Determine if touch event is triggered\n  876:      # check_event_trigger_touch(@x+1, @y)\n  877      end\n  878    end\n  ...\n  903        $audio.queue('step',24) if terrain_tag == 3\n  904      else\n  905:       # Determine if touch event is triggered\n  906:      # check_event_trigger_touch(@x, @y-1)\n  907      end\n  908    end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\event.rb:\n  493    #--------------------------------------------------------------------------\n  494    def check_event_trigger_auto\n  495:     # # If trigger is [touch from event] and consistent with player coordinates\n  496      # if @trigger == 2 and @x == $player.x and @y == $player.y\n  497      #   # If starting determinant other than jumping is same position event\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n  135    # * Touch Event Starting Determinant\n  136    #--------------------------------------------------------------------------\n  137:   def check_event_trigger_touch(x, y)\n  138          \n  139      return false if $map.interpreter.running?\n  ...\n  231        # If player was moving last time\n  232        if last_moving\n  233:         # Event determinant is via touch of same position event\n  234          result = check_event_trigger_here([1,2])\n  235        end\n  ...\n  252            \n  253          #   # SHAZ - trigger event when:\n  254:         #   # - Autotouch and standing on or beside, or with a counter between\n  255:         #   # - player/event touch and standing as close as possible (on, if possible)\n  256          #   distance = Math.hypot(@x - event.x, @y - event.y)\n  257  \n\nC:\\Aveyond4\\Scripts\\System\\mouse.rb:\n   96          \n   97          if !((icon == \"talk\") || \n   98:            (icon == \"touch\") || \n   99             (icon == \"fight\") || \n  100             (icon == \"examine\") || \n\n14 matches across 4 files\n\n\nSearching 128 files for \"check_event_trigger_touch\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  821      else\n  822        # Determine if touch event is triggered IF ENEMY ONLY\n  823:       #check_event_trigger_touch(@x, @y+1)\n  824      end\n  825    end\n  ...\n  848      else\n  849        # Determine if touch event is triggered\n  850:       check_event_trigger_touch(@x-1, @y)\n  851      end\n  852    end\n  ...\n  874      else\n  875        # Determine if touch event is triggered\n  876:      # check_event_trigger_touch(@x+1, @y)\n  877      end\n  878    end\n  ...\n  904      else\n  905        # Determine if touch event is triggered\n  906:      # check_event_trigger_touch(@x, @y-1)\n  907      end\n  908    end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n  135    # * Touch Event Starting Determinant\n  136    #--------------------------------------------------------------------------\n  137:   def check_event_trigger_touch(x, y)\n  138          \n  139      return false if $map.interpreter.running?\n\n5 matches across 2 files\n\n\nSearching 129 files for \"check_event_trigger_touch\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  821      else\n  822        # Determine if touch event is triggered IF ENEMY ONLY\n  823:       check_event_trigger_touch(@x, @y+1)\n  824      end\n  825    end\n  ...\n  848      else\n  849        # Determine if touch event is triggered\n  850:       check_event_trigger_touch(@x-1, @y)\n  851      end\n  852    end\n  ...\n  874      else\n  875        # Determine if touch event is triggered\n  876:       check_event_trigger_touch(@x+1, @y)\n  877      end\n  878    end\n  ...\n  904      else\n  905        # Determine if touch event is triggered\n  906:       check_event_trigger_touch(@x, @y-1)\n  907      end\n  908    end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n  135    # * Touch Event Starting Determinant\n  136    #--------------------------------------------------------------------------\n  137:   def check_event_trigger_touch(x, y)\n  138          \n  139      return false if $map.interpreter.running?\n\n5 matches across 2 files\n\n\nSearching 129 files for \"add_moblin\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Functions\\common.rb:\n  117  def moblin(ev,delay=1)\n  118  \n  119: 	$scene.add_moblin(ev,delay)\n  120  \n  121  end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\event.rb:\n  473          when '#moblin'\n  474            data.push(1) if data.count < 2\n  475:           $scene.add_moblin(self,data[1].to_i)\n  476  \n  477          when '#disable'\n\nC:\\Aveyond4\\Scripts\\Scenes\\map.rb:\n   42    end\n   43  \n   44:   def add_moblin(ev,delay)\n   45      ev = gev(ev) if !ev.is_a?(Game_Event)\n   46      @moblins.push(Moblin.new(ev,delay))\n\n3 matches across 3 files\n\n\nSearching 129 files for \"def passable\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  183    # * Determine if Passable\n  184    #--------------------------------------------------------------------------\n  185:   def passable?(x, y, d) #d0 = jump\n  186  \n  187      #return true if self != $player\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  318    # * Determine if Passable\n  319    #--------------------------------------------------------------------------\n  320:   def passable?(x, y, d, self_event = nil)\n  321  \n  322      return false unless valid?(x, y)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n   44    # * Passable Determinants\n   45    #--------------------------------------------------------------------------\n   46:   def passable?(x, y, d)\n   47      if DEBUG and Input.press?(Input::CTRL)\n   48        return true\n\n3 matches across 3 files\n\n\nSearching 129 files for \"WINWIN\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n 1433  \n 1434          if x == sx and y == sy\n 1435:           log_scr(\"WINWINWINW\")\n 1436            return [true, map, step-1] \n 1437          end\n\n1 match in 1 file\n\n\nSearching 129 files for \"bush\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Elements\\Map\\character.rb:\n   70      # if @character == $player\n   71      #   self.bitmap = $cache.character(\"Player/boy\")\n   72:     #   self.bitmap = $cache.character(\"Player/boy_corn\") if @character.bush_depth > 0\n   73      # end\n   74  \n   ..\n  104      end\n  105      \n  106:     # Set opacity level, blend method, and bush depth\n  107      self.opacity = @character.opacity\n  108      #log_info(@character.opacity) if @character.opacity < 255\n  109  \n  110:     #if @character.bush_depth > 0\n  111:       #self.bush_depth = 1.2 * @character.bush_depth \n  112  \n  113        #bmp = self.bitmap\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\character.rb:\n  313    # * Get Thicket Depth\n  314    #--------------------------------------------------------------------------\n  315:   def bush_depth\n  316      return 0 if @always_on_top\n  317      return 0 if jumping?\n  318      dx = ((@x * 128) - @real_x).abs\n  319      #log_info(dx) if dx > 0\n  320:     return 12 if $scene.map.bush?(@x, @y) && dx < 24\n  321      return 0\n  322    end\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  356    # * Determine Thicket\n  357    #--------------------------------------------------------------------------\n  358:   def bush?(x, y) ![0,1,2].select{ |i| @passages[data[x,y,i]] & 0x40 == 0x40 }.empty? end\n  359    def counter?(x, y) ![0,1,2].select{ |i| @passages[data[x,y,i]] & 0x80 == 0x80 }.empty? end\n  360    def terrain_tag(x, y)\n\n8 matches across 3 files\n\n\nSearching 129 files for \"open_main_me\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Functions\\menus.rb:\n    1  \n    2: def open_main_menu\n    3  	$game.menu_page = \"Main\"\n    4  	$game.push_scene(Scene_Menu.new)\n\nC:\\Aveyond4\\Scripts\\Interface\\Map\\screen.rb:\n   69  	  return if busy? or $map.interpreter.running?\n   70        if $input.cancel? || Input.trigger?(Input::F7)\n   71:       	open_main_menu\n   72        end\n   73  \n\n2 matches across 2 files\n\n\nSearching 129 files for \"Graphics.transit\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\player.rb:\n  321        $player.straighten  \n  322  \n  323:       Graphics.transition(12)\n  324  \n  325      #end\n\nC:\\Aveyond4\\Scripts\\Scenes\\battle.rb:\n   61      reload_map\n   62          \n   63:     Graphics.transition(20,'Graphics/Transitions/trans') \n   64              \n   65    end\n\nC:\\Aveyond4\\Scripts\\Scenes\\menu.rb:\n   31      @sub = nil\n   32  \n   33:     Graphics.transition(20,'Graphics/Transitions/trans')     \n   34  \n   35    end\n\n3 matches across 3 files\n\n\nSearching 129 files for \"atmosphere\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Model\\Map\\map.rb:\n  112          # Play music from the zone\n  113          $audio.music(@zone.music)\n  114:         $audio.atmosphere(@zone.atmosphere)\n  115          $audio.change_mode(@zone.reverb)\n  116  \n\nC:\\Aveyond4\\Scripts\\System\\audio.rb:\n   84  \n   85      @music = Seal::Source.new\n   86:     @atmosphere = Seal::Source.new\n   87  \n   88      # Looping, fade by distance\n   ..\n  127    end\n  128  \n  129:   def atmosphere(file)\n  130      if file == nil  || file == ''\n  131:       @atmosphere.stop\n  132        return\n  133      end\n  134:     @atmosphere.gain = 0.3\n  135:     @atmosphere.stream = Seal::Stream.open(\"Audio/Atmosphere/#{file}.ogg\")\n  136:     @atmosphere.play\n  137    end\n  138  \n\nC:\\Aveyond4\\Scripts\\Utils\\data_types.rb:\n   58  	attr_reader :id\n   59  	attr_reader :music\n   60: 	attr_reader :atmosphere\n   61  	attr_reader :reverb\n   62  	attr_reader :tint\n\n9 matches across 3 files\n\n\nSearching 129 files for \"def fade\" (case sensitive)\n\nC:\\Aveyond4\\Scripts\\Functions\\general.rb:\n   11  end\n   12  \n   13: def fadeout(f=30)\n   14  	$scene.overlay.do(to(\"opacity\",255,255/f))\n   15  	w f\n   16  end\n   17  \n   18: def fadein(f=30)\n   19  	$scene.overlay.do(to(\"opacity\",0,-255/30))\n   20  	w f\n   21  end\n   22  \n   23: def fade(ev)\n   24  	gev(ev).do(to(\"opacity\",0,2))\n   25  end\n\n3 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 19850,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Model/Map/map.rb",
			"settings":
			{
				"buffer_size": 10091,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/screen.rb",
			"settings":
			{
				"buffer_size": 1601,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Scenes/map.rb",
			"settings":
			{
				"buffer_size": 996,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/game.rb",
			"settings":
			{
				"buffer_size": 1666,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/input.rb",
			"settings":
			{
				"buffer_size": 925,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/keyboard.rb",
			"settings":
			{
				"buffer_size": 2037,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/info.rb",
			"settings":
			{
				"buffer_size": 534,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Widgets/list.rb",
			"settings":
			{
				"buffer_size": 7215,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Elements/Widgets/spritegroup.rb",
			"settings":
			{
				"buffer_size": 886,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System/tweens.rb",
			"settings":
			{
				"buffer_size": 764,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Menu/base.rb",
			"settings":
			{
				"buffer_size": 1596,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Menu/shop.rb",
			"settings":
			{
				"buffer_size": 795,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Functions/routes.rb",
			"settings":
			{
				"buffer_size": 4124,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Scenes/menu.rb",
			"settings":
			{
				"buffer_size": 1787,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Menu/main.rb",
			"settings":
			{
				"buffer_size": 5574,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Model/Map/interpreter.rb",
			"settings":
			{
				"buffer_size": 22402,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Map/Parts/grid.rb",
			"settings":
			{
				"buffer_size": 3673,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Interface/Menu/Parts/list_common.rb",
			"settings":
			{
				"buffer_size": 589,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Wizardry.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"eval",
				"RubyEval: ruby_eval"
			],
			[
				"be",
				"BeautifyRuby"
			],
			[
				"b",
				"BeautifyRuby"
			],
			[
				"",
				"BeautifyRuby"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"mode",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"p",
				"Package Control: Install Package"
			]
		],
		"width": 514.0
	},
	"console":
	{
		"height": 172.0,
		"history":
		[
			"which ruby",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Aveyond4/Scripts",
		"/C/Aveyond4/Scripts/Elements",
		"/C/Aveyond4/Scripts/Elements/Map",
		"/C/Aveyond4/Scripts/Elements/Widgets",
		"/C/Aveyond4/Scripts/Functions",
		"/C/Aveyond4/Scripts/Interface",
		"/C/Aveyond4/Scripts/Interface/Battle",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts",
		"/C/Aveyond4/Scripts/Interface/Map",
		"/C/Aveyond4/Scripts/Interface/Map/Parts",
		"/C/Aveyond4/Scripts/Interface/Menu",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts",
		"/C/Aveyond4/Scripts/Model",
		"/C/Aveyond4/Scripts/Model/Battle",
		"/C/Aveyond4/Scripts/Model/Map",
		"/C/Aveyond4/Scripts/Model/State",
		"/C/Aveyond4/Scripts/Scenes",
		"/C/Aveyond4/Scripts/System",
		"/C/Aveyond4/Scripts/Utils",
		"/C/Aveyond4/Scripts/Utils/Tweens",
		"/C/Aveyond4/Editor",
		"/C/Aveyond4/Editor/meta"
	],
	"file_history":
	[
		"/C/Aveyond4/Scripts/Functions/general.rb",
		"/C/Aveyond4/Scripts/Functions/transfers.rb",
		"/C/Aveyond4/Scripts/Scenes/base.rb",
		"/C/Aveyond4/Scripts/Scenes/battle.rb",
		"/C/Aveyond4/Scripts/System/audio.rb",
		"/C/Aveyond4/Scripts/Utils/ruby.rb",
		"/C/Aveyond4/Scripts/Model/Map/map.rb",
		"/C/Aveyond4/Scripts/Interface/Map/screen.rb",
		"/C/Aveyond4/Scripts/Elements/Map/weather.rb",
		"/C/Aveyond4/Scripts/Model/Map/player.rb",
		"/C/Aveyond4/Scripts/Functions/routes.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_1_stats.rb",
		"/C/Aveyond4/Scripts/Utils/data_types.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_4_equips.rb",
		"/C/Aveyond4/Editor/meta/enemies.json",
		"/C/Aveyond4/Editor/meta/gear.json",
		"/C/Aveyond4/Editor/meta/states.json",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/charview.rb",
		"/C/Aveyond4/Scripts/System/fonts.rb",
		"/C/Aveyond4/Scripts/Model/State/party.rb",
		"/C/Aveyond4/Scripts/Model/Map/event.rb",
		"/C/Aveyond4/Scripts/System/cache.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/itemcmd.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/list.rb",
		"/C/Aveyond4/Editor/meta/shop.json",
		"/C/Aveyond4/Scripts/Elements/Widgets/box.rb",
		"/C/Aveyond4/Scripts/Model/Map/moblin.rb",
		"/C/Aveyond4/Editor/meta/actors.json",
		"/C/Aveyond4/Editor/meta/items.json",
		"/C/Aveyond4/Editor/meta/progress.json",
		"/C/Aveyond4/Editor/meta/quests.json",
		"/C/Aveyond4/Editor/edit.html",
		"/C/Aveyond4/Scripts/Functions/poppers.rb",
		"/C/Aveyond4/Scripts/Functions/inventory.rb",
		"/C/Aveyond4/Scripts/Scenes/map.rb",
		"/C/Aveyond4/Scripts/Functions/sparks.rb",
		"/C/Aveyond4/Scripts/Functions/progress.rb",
		"/C/Aveyond4/Scripts/Model/Map/interpreter.rb",
		"/C/Aveyond4/Scripts/Model/State/battle.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_3_main.rb",
		"/C/Aveyond4/Scripts/Functions/common.rb",
		"/C/Aveyond4/Scripts/System/tweens.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/message.rb",
		"/C/Aveyond4/Scripts/Model/Map/character.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/actorcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/targetcmd.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/Parts/skillcmd.rb",
		"/C/Aveyond4/Editor/meta/keyitems.json",
		"/C/Aveyond4/Scripts/Elements/Map/panorama.rb",
		"/C/Aveyond4/Scripts/Functions/events.rb",
		"/C/Users/Dan/Desktop/test.bikini",
		"/C/Boyfriend Stealer/Assets/Resources/test.bikini",
		"/C/Aveyond4/Scripts/Functions/camera.rb",
		"/C/Aveyond4/Scripts/Functions/items.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/grid.rb",
		"/C/Aveyond4/Scripts/Elements/Map/mapwrap.rb",
		"/C/Aveyond4/Scripts/Elements/Map/spark.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/popper.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/label.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Menus/base.rb",
		"/C/Aveyond4/Scripts/Elements/Map/character.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/spritegroup.rb",
		"/C/Aveyond4/Scripts/System/debug.rb",
		"/C/Aveyond4/Scripts/Model/State/progress.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/list_common.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/right_page.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/page_title.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/journal.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/main.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/save.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/options.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/items.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/party.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/skills.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/equip.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/quit.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/load.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/char.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/base.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/port_full.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/page_tabs.rb",
		"/C/Aveyond4/Scripts/Scenes/menu.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/info_box.rb",
		"/C/Aveyond4/Scripts/System/mouse.rb",
		"/C/Aveyond4/Scripts/System/keyboard.rb",
		"/C/Aveyond4/Editor/edit.js",
		"/C/Aveyond4/Scripts/Elements/Widgets/tabs.rb",
		"/C/Aveyond4/Scripts/Elements/Map/pop.rb",
		"/C/Aveyond4/Scripts/Elements/Map/poptext.rb",
		"/C/Aveyond4/Scripts/Utils/Tweens/lib.rb",
		"/C/Aveyond4/Editor/meta/anims.json",
		"/C/Aveyond4/Scripts/Utils/Tweens/object.rb",
		"/C/Aveyond4/Scripts/Functions/audio.rb",
		"/C/Aveyond4/Scripts/System/aseal.rb",
		"/C/Aveyond4/Scripts/Utils/Tweens/tweens.rb",
		"/C/Aveyond4/Scripts/System/data.rb",
		"/C/Aveyond4/Editor/assets/css/ttip.css",
		"/C/Aveyond4/Editor/meta/skills.json",
		"/C/Aveyond4/Editor/meta/zones.json",
		"/C/Aveyond4/Scripts/System/game.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/seal.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/pop.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/battlehud.rb",
		"/C/Aveyond4/Scripts/Functions/state.rb",
		"/C/Aveyond4/Scripts/Model/State/state.rb",
		"/C/Users/Dan/Desktop/seal/seal.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/area.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/item_box.rb",
		"/C/Aveyond4/Scripts/Interface/Map/Parts/bar.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/spark.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/char_box_small.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/char_box_large.rb",
		"/C/Aveyond4/Scripts/Functions/group.rb",
		"/C/Aveyond4/Scripts/Utils/gfont.rb",
		"/C/Aveyond4/Scripts/System/settings.rb",
		"/C/Aveyond4/Scripts/Functions/message.rb",
		"/C/Aveyond4/Scripts/Utils/bitmap.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/list_main.rb",
		"/C/Aveyond4/Scripts/Elements/Map/particle.rb",
		"/C/Aveyond4/Scripts/Utils/Extensions/video.rb",
		"/C/Aveyond4/Scripts/Interface/Menu/Parts/list_journal.rb",
		"/C/Aveyond4/Scripts/Model/Battle/result.rb",
		"/C/Aveyond4/Scripts/Model/Battle/battler_3_skills.rb",
		"/C/Aveyond4/Scripts/Model/State/menu.rb",
		"/C/Aveyond4/Scripts/Interface/Battle/popper.rb",
		"/C/Aveyond4/Scripts/Scenes/battle_2_actor.rb",
		"/C/Aveyond4/Scripts/Elements/Widgets/bar.rb"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"C:\\Aveyond4\\Scripts\\",
			"C:\\Aveyond4\\Scripts\\Utils\\Funcs",
			"C:\\Aveyond4\\Scripts",
			"C:\\Aveyond4\\\\",
			"C:\\Aveyond4\\Editor\\",
			"C:\\Aveyond4\\Scripts\\",
			"C:\\Aveyond4\\Scripts\\Widgets",
			"C:\\Aveyond4\\Scripts",
			"C:\\FairyTale\\Scripts"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"def fade",
			"atmosphere",
			"Graphics.transit",
			"open_main_me",
			"choose",
			"select",
			"log",
			"@tail",
			"bush",
			"WINWIN",
			"def passable",
			"add_moblin",
			"check",
			"check_event_trigger_touch",
			"passable",
			"check_event_trigger_touch",
			"touch",
			"touch_event",
			"event_touch",
			"enemies",
			"enemy",
			"change_tint",
			"change_fogs",
			"Scene_Menu",
			"$map",
			"$interp",
			"Scene_Menu",
			"transfer_to",
			"modified",
			"choose_action",
			"move",
			"TRYIT",
			"boyle",
			"move_up",
			"prev",
			"if",
			"move_down",
			"step",
			"move_route_forcing",
			"change_panoramas",
			"ADDING",
			"next_word",
			"update_waiting",
			"running?",
			"running",
			"interpreter.running?",
			"update",
			"turn_rig",
			"passab",
			"passable",
			"def gold",
			"transfer",
			"fadein",
			"\"ADDING",
			"('ADDING",
			"ADDING",
			"@",
			"def update",
			"done",
			"data",
			"spark",
			"camera_snap",
			"cam_snap",
			"cam_xy",
			"camera_xy",
			"screen_z",
			"pattern",
			"music",
			"def hide",
			"prep_sprite",
			"feed",
			"delay",
			"truncate",
			"title",
			"ADDING",
			"Source",
			"Buffer",
			"fadein",
			"looklike(char)",
			"CHANGEIT",
			"wait",
			"screen_x",
			"LIB_DIR",
			"cool_j",
			"update_jump",
			"@jump_count",
			"jumping?",
			"def jump",
			"jumping?",
			"trigger",
			"def this",
			"this",
			"setup",
			"check_event_trigger_auto",
			"start",
			"trigger",
			"def disable",
			"window",
			"load_bitmap",
			"stop",
			"@tail",
			"start_vn",
			"@scratch",
			"@lines",
			"state?",
			"@deleted",
			"message",
			"start(",
			"skip_all",
			"update_wai",
			"@sprites",
			"move",
			"$player",
			"done",
			"spark",
			"args",
			"hskin",
			"bold",
			"alpha",
			"@textbox.bitmap.font",
			"STATEEN",
			"add_spark",
			"magic",
			"^.*\\S+.*$",
			"Active Ques",
			"Active Quest",
			"call",
			"@current"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"box",
			"load",
			"@active_battler",
			"select_skill",
			"@keys_held",
			"$cache",
			"$tbl_sorting",
			"$tbl_per_page",
			"$tbl_offset",
			"$json_data",
			"$meta_data",
			"$data_type",
			"_data_type",
			"@data_type",
			"Tween",
			"tween",
			"$map",
			"$player",
			"$map",
			"$player",
			"$map",
			"$party",
			"$map",
			"$player",
			"$map",
			"$game_player",
			"$game_map",
			"get_ev",
			"@inventory",
			"@items"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 10,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Scenes/battle_2_actor.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3613,
						"regions":
						{
						},
						"selection":
						[
							[
								2623,
								2623
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1653.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Scenes/battle_3_main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2708,
						"regions":
						{
						},
						"selection":
						[
							[
								2623,
								2623
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1888.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Model/Map/character.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42235,
						"regions":
						{
						},
						"selection":
						[
							[
								27733,
								27733
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17550.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "System/audio.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4301,
						"regions":
						{
						},
						"selection":
						[
							[
								2040,
								2040
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1824.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Model/Map/event.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13910,
						"regions":
						{
						},
						"selection":
						[
							[
								11108,
								11108
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8183.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Elements/Map/weather.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1555,
						"regions":
						{
						},
						"selection":
						[
							[
								687,
								687
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Interface/Map/Parts/message.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17536,
						"regions":
						{
						},
						"selection":
						[
							[
								8768,
								8768
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7005.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Functions/battle.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52,
						"regions":
						{
						},
						"selection":
						[
							[
								52,
								52
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Functions/sparks.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 885,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								204
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Elements/Map/spark.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1406,
						"regions":
						{
						},
						"selection":
						[
							[
								1172,
								1172
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Model/Map/player.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10073,
						"regions":
						{
						},
						"selection":
						[
							[
								9795,
								9795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5771.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Functions/transfers.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1295,
						"regions":
						{
						},
						"selection":
						[
							[
								774,
								774
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Model/State/battle.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3463,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/Aveyond4/Editor/meta/numbers.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 90,
						"regions":
						{
						},
						"selection":
						[
							[
								82,
								82
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "System/data.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4118,
						"regions":
						{
						},
						"selection":
						[
							[
								1323,
								1323
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/Aveyond4/Editor/edit.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5568,
						"regions":
						{
						},
						"selection":
						[
							[
								1973,
								1973
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/Aveyond4/Editor/edit.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19017,
						"regions":
						{
						},
						"selection":
						[
							[
								12538,
								12538
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7157.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "Model/Battle/battler_2_states.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2759,
						"regions":
						{
						},
						"selection":
						[
							[
								1332,
								1332
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "Model/Battle/battler.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2713,
						"regions":
						{
						},
						"selection":
						[
							[
								2566,
								2566
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2046.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "Model/Battle/battler_1_stats.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1886,
						"regions":
						{
						},
						"selection":
						[
							[
								228,
								228
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/Aveyond4/Editor/meta/actors.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 275,
						"regions":
						{
						},
						"selection":
						[
							[
								273,
								224
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": true,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "Model/Battle/battler_3_skills.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 908,
						"regions":
						{
						},
						"selection":
						[
							[
								227,
								227
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "Interface/Battle/battlehud.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 948,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "Elements/Widgets/label.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2428,
						"regions":
						{
						},
						"selection":
						[
							[
								1019,
								1019
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "Elements/Widgets/bar.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 786,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "Interface/Battle/Parts/skillcmd.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								429,
								429
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "Interface/Battle/Parts/itemcmd.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 897,
						"regions":
						{
						},
						"selection":
						[
							[
								504,
								504
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "Elements/Map/character.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3755,
						"regions":
						{
						},
						"selection":
						[
							[
								1847,
								1847
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 583.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "Functions/audio.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 151,
						"regions":
						{
						},
						"selection":
						[
							[
								151,
								151
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "Interface/Map/Parts/shop.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 867,
						"regions":
						{
						},
						"selection":
						[
							[
								585,
								629
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "Functions/menus.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 296,
						"regions":
						{
						},
						"selection":
						[
							[
								231,
								231
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 31,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19850,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										179,
										189
									],
									[
										297,
										307
									],
									[
										416,
										426
									],
									[
										644,
										654
									],
									[
										805,
										815
									],
									[
										973,
										983
									],
									[
										1119,
										1129
									],
									[
										1228,
										1238
									],
									[
										1410,
										1420
									],
									[
										1529,
										1539
									],
									[
										1843,
										1853
									],
									[
										1961,
										1971
									],
									[
										2080,
										2090
									],
									[
										2292,
										2302
									],
									[
										2453,
										2463
									],
									[
										2621,
										2631
									],
									[
										2767,
										2777
									],
									[
										2876,
										2886
									],
									[
										3058,
										3068
									],
									[
										3177,
										3187
									],
									[
										3591,
										3602
									],
									[
										3750,
										3761
									],
									[
										4059,
										4064
									],
									[
										4184,
										4189
									],
									[
										4296,
										4301
									],
									[
										4463,
										4468
									],
									[
										4570,
										4575
									],
									[
										4721,
										4726
									],
									[
										4776,
										4781
									],
									[
										4942,
										4947
									],
									[
										5014,
										5019
									],
									[
										5083,
										5088
									],
									[
										5089,
										5094
									],
									[
										5202,
										5207
									],
									[
										5413,
										5418
									],
									[
										5667,
										5672
									],
									[
										5914,
										5919
									],
									[
										6195,
										6202
									],
									[
										6360,
										6367
									],
									[
										6412,
										6419
									],
									[
										6426,
										6433
									],
									[
										6572,
										6579
									],
									[
										6684,
										6691
									],
									[
										6830,
										6837
									],
									[
										6838,
										6845
									],
									[
										6873,
										6880
									],
									[
										7007,
										7014
									],
									[
										7141,
										7148
									],
									[
										7255,
										7262
									],
									[
										7485,
										7492
									],
									[
										7721,
										7728
									],
									[
										7958,
										7965
									],
									[
										8207,
										8214
									],
									[
										8417,
										8424
									],
									[
										8458,
										8465
									],
									[
										8684,
										8691
									],
									[
										8929,
										8936
									],
									[
										9084,
										9091
									],
									[
										9227,
										9234
									],
									[
										9248,
										9255
									],
									[
										9450,
										9457
									],
									[
										9898,
										9903
									],
									[
										9971,
										9976
									],
									[
										10092,
										10097
									],
									[
										10151,
										10156
									],
									[
										10272,
										10277
									],
									[
										10331,
										10336
									],
									[
										10482,
										10487
									],
									[
										10541,
										10546
									],
									[
										10779,
										10784
									],
									[
										11195,
										11200
									],
									[
										11398,
										11403
									],
									[
										11599,
										11604
									],
									[
										11694,
										11699
									],
									[
										11952,
										11957
									],
									[
										12286,
										12311
									],
									[
										12438,
										12463
									],
									[
										12591,
										12616
									],
									[
										12744,
										12769
									],
									[
										12994,
										13019
									],
									[
										13333,
										13358
									],
									[
										13485,
										13510
									],
									[
										13637,
										13662
									],
									[
										13789,
										13814
									],
									[
										14039,
										14064
									],
									[
										14317,
										14327
									],
									[
										14500,
										14510
									],
									[
										14639,
										14649
									],
									[
										15014,
										15026
									],
									[
										15267,
										15279
									],
									[
										15531,
										15543
									],
									[
										15824,
										15830
									],
									[
										16195,
										16199
									],
									[
										16318,
										16322
									],
									[
										16477,
										16481
									],
									[
										16511,
										16515
									],
									[
										16541,
										16545
									],
									[
										16767,
										16771
									],
									[
										16961,
										16965
									],
									[
										17187,
										17191
									],
									[
										17546,
										17558
									],
									[
										17810,
										17822
									],
									[
										18035,
										18051
									],
									[
										18171,
										18187
									],
									[
										18336,
										18352
									],
									[
										18641,
										18651
									],
									[
										18658,
										18668
									],
									[
										18821,
										18831
									],
									[
										18938,
										18948
									],
									[
										19010,
										19020
									],
									[
										19073,
										19083
									],
									[
										19107,
										19117
									],
									[
										19189,
										19199
									],
									[
										19340,
										19350
									],
									[
										19554,
										19562
									],
									[
										19661,
										19669
									],
									[
										19767,
										19775
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								19772,
								19772
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 19,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 13129.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "Model/Map/map.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10091,
						"regions":
						{
						},
						"selection":
						[
							[
								8129,
								8129
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6188.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "Interface/Map/screen.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1601,
						"regions":
						{
						},
						"selection":
						[
							[
								1081,
								1081
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 868.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "Scenes/map.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 996,
						"regions":
						{
						},
						"selection":
						[
							[
								514,
								514
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "System/game.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1666,
						"regions":
						{
						},
						"selection":
						[
							[
								1227,
								1227
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 798.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "System/input.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 925,
						"regions":
						{
						},
						"selection":
						[
							[
								526,
								526
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "System/keyboard.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2037,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "Interface/Map/Parts/info.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 534,
						"regions":
						{
						},
						"selection":
						[
							[
								510,
								510
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "Elements/Widgets/list.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7215,
						"regions":
						{
						},
						"selection":
						[
							[
								5497,
								5497
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4877.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "Elements/Widgets/spritegroup.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 886,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "System/tweens.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 764,
						"regions":
						{
						},
						"selection":
						[
							[
								472,
								472
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "Interface/Menu/base.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1596,
						"regions":
						{
						},
						"selection":
						[
							[
								1409,
								1409
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "Interface/Menu/shop.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 795,
						"regions":
						{
						},
						"selection":
						[
							[
								260,
								260
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "Functions/routes.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4124,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1254.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "Scenes/menu.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1787,
						"regions":
						{
						},
						"selection":
						[
							[
								1536,
								1536
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "Interface/Menu/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5574,
						"regions":
						{
						},
						"selection":
						[
							[
								2576,
								2576
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1628.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "Model/Map/interpreter.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22402,
						"regions":
						{
						},
						"selection":
						[
							[
								5004,
								5004
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2793.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "Interface/Map/Parts/grid.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3673,
						"regions":
						{
						},
						"selection":
						[
							[
								3106,
								3093
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 3591.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "Interface/Menu/Parts/list_common.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589,
						"regions":
						{
						},
						"selection":
						[
							[
								87,
								421
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 119.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Wizardry.sublime-build",
	"project": "Aveyond4.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"spriteg",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"player",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"cache",
				"Scripts\\System\\cache.rb"
			],
			[
				"int",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"battle",
				"Scripts\\Scenes\\battle.rb"
			],
			[
				"chara",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"audio",
				"Scripts\\System\\audio.rb"
			],
			[
				"mess",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"event",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"spark",
				"Scripts\\Elements\\Map\\spark.rb"
			],
			[
				"map",
				"Scripts\\Model\\Map\\map.rb"
			],
			[
				"",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"inter",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"mob",
				"Scripts\\Model\\Map\\moblin.rb"
			],
			[
				"mes",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"spr",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"message",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"sprite",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"cach",
				"Scripts\\System\\cache.rb"
			],
			[
				"font",
				"Scripts\\System\\fonts.rb"
			],
			[
				"screen",
				"Scripts\\Interface\\Map\\screen.rb"
			],
			[
				"hud",
				"Scripts\\Interface\\Battle\\battlehud.rb"
			],
			[
				"interp",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"eve",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"messa",
				"Scripts\\Interface\\Map\\Parts\\message.rb"
			],
			[
				"box",
				"Scripts\\Elements\\Widgets\\box.rb"
			],
			[
				"fonts",
				"Scripts\\System\\fonts.rb"
			],
			[
				"menu",
				"Scripts\\Scenes\\menu.rb"
			],
			[
				"char_bo",
				"Scripts\\Interface\\Menu\\Parts\\char_box_small.rb"
			],
			[
				"char",
				"Scripts\\Interface\\Menu\\Parts\\char_box_large.rb"
			],
			[
				"settin",
				"Scripts\\System\\settings.rb"
			],
			[
				"ply",
				"Scripts\\Model\\Map\\player.rb"
			],
			[
				"party",
				"Scripts\\Model\\State\\party.rb"
			],
			[
				"even",
				"Scripts\\Model\\Map\\event.rb"
			],
			[
				"prog",
				"Scripts\\Model\\State\\progress.rb"
			],
			[
				"progre",
				"Scripts\\Functions\\progress.rb"
			],
			[
				"game",
				"Scripts\\System\\game.rb"
			],
			[
				"lab",
				"Scripts\\Elements\\Widgets\\label.rb"
			],
			[
				"info",
				"Scripts\\Interface\\Menu\\Parts\\info_box.rb"
			],
			[
				"port",
				"Scripts\\Interface\\Menu\\Parts\\port_full.rb"
			],
			[
				"input",
				"Scripts\\System\\input.rb"
			],
			[
				"spritegour",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"data",
				"Scripts\\System\\data.rb"
			],
			[
				"character",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"tweens",
				"Scripts\\System\\tweens.rb"
			],
			[
				"charbox",
				"Scripts\\Interface\\Menu\\Parts\\char_box_large.rb"
			],
			[
				"actor",
				"Scripts\\Model\\Battle\\actor.rb"
			],
			[
				"ouse",
				"Scripts\\System\\mouse.rb"
			],
			[
				"mouse",
				"Scripts\\System\\mouse.rb"
			],
			[
				"cara",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"cahe",
				"Scripts\\System\\cache.rb"
			],
			[
				"cha",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"mover",
				"Scripts\\Utils\\Funcs\\moveroute.rb"
			],
			[
				"charac",
				"Scripts\\Model\\Map\\character.rb"
			],
			[
				"inte",
				"Scripts\\Model\\Map\\interpreter.rb"
			],
			[
				"group",
				"Scripts\\Elements\\Widgets\\spritegroup.rb"
			],
			[
				"list",
				"Scripts\\Elements\\Widgets\\list.rb"
			],
			[
				"list.rb",
				"Scripts\\Elements\\Widgets\\list.rb"
			],
			[
				"actorcmd",
				"Scripts\\Interface\\Battle\\actorcmd.rb"
			],
			[
				"actorcm",
				"Scripts\\Interface\\Battle\\actorcmd.rb"
			],
			[
				"main",
				"Scripts\\main.rb"
			],
			[
				"tilema",
				"Scripts\\Elements\\Map\\tilemap.rb"
			],
			[
				"tilem",
				"Scripts\\Elements\\Map\\tilemap.rb"
			],
			[
				"scene",
				"Scripts\\Scenes\\map.rb"
			],
			[
				"tilemap",
				"Scripts\\Utils\\tilemap.rb"
			],
			[
				"tile",
				"Scripts\\Utils\\tilemap.rb"
			],
			[
				"text",
				"Scripts\\Ui\\textbox.rb"
			],
			[
				"debu",
				"Scripts\\Managers\\debug.rb"
			],
			[
				"key",
				"Scripts\\Managers\\keyboard.rb"
			],
			[
				"keyb",
				"Scripts\\Managers\\keyboard.rb"
			],
			[
				"cons",
				"Scripts\\Utils\\Debug\\console.rb"
			],
			[
				"conso",
				"Scripts\\Utils\\Debug\\console.rb"
			],
			[
				"deb",
				"Scripts\\Managers\\debug.rb"
			],
			[
				"de",
				"Scripts\\Managers\\debug.rb"
			],
			[
				"debug",
				"Scripts\\Managers\\debug.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
